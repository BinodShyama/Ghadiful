// <auto-generated />
using System;
using Ghadiful.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ghadiful.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ApprovalHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<long>("RecordId")
                        .HasColumnType("bigint");

                    b.Property<string>("RecordTable")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__Approval__3214EC0765C1A174");

                    b.HasIndex("CalendarId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("ApprovalHistory", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ApprovalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BackFlowId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ProgressPercent")
                        .HasColumnType("int");

                    b.Property<string>("Sentiment")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Approval__3214EC07605B2872");

                    b.HasIndex("BackFlowId");

                    b.HasIndex("ParentId");

                    b.ToTable("ApprovalStatus", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Approver", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Approver__3214EC076E63F6D6");

                    b.HasIndex("GroupId");

                    b.HasIndex("StatusId");

                    b.ToTable("Approver", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.AttendanceLogToday", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Addate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BioTrackerId")
                        .HasColumnType("int");

                    b.Property<int>("Bsdate")
                        .HasColumnType("int");

                    b.Property<long>("EnrollNumber")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("Timestamp")
                        .HasColumnType("time");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BioTrackerId");

                    b.ToTable("AttendanceLogTodays", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.BiometricLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<long>("EnrollNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("InOutMode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<TimeSpan>("Timestamp")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<int>("TrackerId")
                        .HasColumnType("int");

                    b.Property<string>("VerifyMode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Biometri__3214EC07AB4A2D29");

                    b.HasIndex("CalendarId");

                    b.HasIndex("TrackerId");

                    b.ToTable("BiometricLog", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.BiometricTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CommPassword")
                        .HasColumnType("int");

                    b.Property<string>("Ipaddress")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("IPAddress");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PortNumber")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TemplateVersion")
                        .HasColumnType("int");

                    b.Property<string>("VerifyModes")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Biometri__3214EC073199CA9E");

                    b.HasIndex(new[] { "Ipaddress" }, "UQ__Biometri__F0C25BE0A67B00FB")
                        .IsUnique();

                    b.ToTable("BiometricTracker", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Break", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Break__3214EC077AADEBD0");

                    b.HasIndex(new[] { "Name" }, "UQ__Break__737584F64C43D759")
                        .IsUnique();

                    b.HasIndex(new[] { "Code" }, "UQ__Break__A25C5AA7A604FE64")
                        .IsUnique();

                    b.ToTable("Break", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.BreakLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("AcrossMidnight")
                        .HasColumnType("bit");

                    b.Property<bool>("AutomaticShift")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("BreakIn")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan>("BreakOut")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__BreakLog__3214EC074D7B30BB");

                    b.HasIndex("CalendarId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShiftId");

                    b.ToTable("BreakLog", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Calendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Addate")
                        .HasColumnType("date")
                        .HasColumnName("ADDate");

                    b.Property<int>("Bsdate")
                        .HasColumnType("int")
                        .HasColumnName("BSDate");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Calendar__3214EC07671827A5");

                    b.HasIndex("MonthId");

                    b.ToTable("Calendar", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.CalendarMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Calendar__3214EC07F0C60F2E");

                    b.HasIndex("YearId");

                    b.ToTable("CalendarMonth", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.CalendarYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Calendar__3214EC07C57D492E");

                    b.ToTable("CalendarYear", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.CheckInOutLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("AcrossMidnight")
                        .HasColumnType("bit");

                    b.Property<bool>("AutomaticShift")
                        .HasColumnType("bit");

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("CheckIn")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan?>("CheckOut")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<int>("CinOrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("CInOrganizationId");

                    b.Property<long>("CinSourceId")
                        .HasColumnType("bigint")
                        .HasColumnName("CInSourceId");

                    b.Property<string>("CinSourceType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CInSourceType");

                    b.Property<int>("CoutOrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("COutOrganizationId");

                    b.Property<long?>("CoutSourceId")
                        .HasColumnType("bigint")
                        .HasColumnName("COutSourceId");

                    b.Property<string>("CoutSourceType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("COutSourceType");

                    b.Property<int>("EmpOrganizationId")
                        .HasColumnType("int");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__CheckInO__3214EC07D4D844F1");

                    b.HasIndex("CalendarId");

                    b.HasIndex("CinOrganizationId");

                    b.HasIndex("CoutOrganizationId");

                    b.HasIndex("EmpOrganizationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShiftId");

                    b.ToTable("CheckInOutLog", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.CheckInOutRangeOverride", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<int>("CheckInStartMinute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((60))");

                    b.Property<int>("CheckOutEndMinute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((60))");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__CheckInO__3214EC071F76BE39");

                    b.HasIndex("CalendarId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CheckInOutRangeOverride", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CheckInGraceMinute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((15))");

                    b.Property<int>("CheckInStartMinute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((60))");

                    b.Property<int>("CheckOutEndMinute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((60))");

                    b.Property<int>("CheckOutGraceMinute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((5))");

                    b.Property<long>("DeviceEnrollNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<int>("LastOrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("LastPositionId")
                        .HasColumnType("int");

                    b.Property<int>("LastPromotionOrJoinedDate")
                        .HasColumnType("int");

                    b.Property<int>("LastTransferOrJoinedDate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OfficialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OverTimeLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PayrollNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("PhoneNumberVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC079AE2E4B6");

                    b.HasIndex("LastOrganizationId");

                    b.HasIndex("LastPositionId");

                    b.HasIndex("LastPromotionOrJoinedDate");

                    b.HasIndex("LastTransferOrJoinedDate");

                    b.HasIndex("OverTimeLimit");

                    b.HasIndex(new[] { "DeviceEnrollNumber" }, "UQ__Employee__54765324498C0968")
                        .IsUnique();

                    b.HasIndex(new[] { "PayrollNumber" }, "UQ__Employee__D1C5B2C107025AE1")
                        .IsUnique();

                    b.HasIndex(new[] { "OfficialNumber" }, "UQ__Employee__DE1F8998617CA2E2")
                        .IsUnique();

                    b.ToTable("Employee", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.EmployeeGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC0769BC9960");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GroupId");

                    b.ToTable("EmployeeGroup", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.EmployeePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int>("EndDate")
                        .HasColumnType("int");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("StartDate")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC07E730E0F4");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EndDate");

                    b.HasIndex("PositionId");

                    b.HasIndex("StartDate");

                    b.ToTable("EmployeePosition", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.EmployeeTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC073740D1E6");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeTag", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.EmployeeTransfer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int>("EndDate")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("StartDate")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC071AE7DD95");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EndDate");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("StartDate");

                    b.ToTable("EmployeeTransfer", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.GraceTimeOverride", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<int>("CheckInGraceMinute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((15))");

                    b.Property<int>("CheckOutGraceMinute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((5))");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__GraceTim__3214EC07E8F8FB37");

                    b.HasIndex("CalendarId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("GraceTimeOverride", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("Hierarchy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Tags")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Group__3214EC0730CB5D2B");

                    b.HasIndex(new[] { "Name" }, "UQ__Group__737584F643237BC3")
                        .IsUnique();

                    b.ToTable("Group", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Holiday__3214EC072ABC982A");

                    b.HasIndex(new[] { "Name" }, "UQ__Holiday__737584F68AA185C2")
                        .IsUnique();

                    b.ToTable("Holiday", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.HolidayCalendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<int>("HolidayId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__HolidayC__3214EC07A4D4476B");

                    b.HasIndex("CalendarId");

                    b.HasIndex("GroupId");

                    b.HasIndex("HolidayId");

                    b.ToTable("HolidayCalendar", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("IdentityRole", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("IdentityUser", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Leave", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("MaintainMaxBalance")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal>("MaintainMinBalance")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Paid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PayrollCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Leave__3214EC074A16200D");

                    b.ToTable("Leave", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveBalance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<int>("EffectiveDate")
                        .HasColumnType("int");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ExpiryDate")
                        .HasColumnType("int");

                    b.Property<long>("LeaveId")
                        .HasColumnType("bigint");

                    b.Property<int>("PlusOrMinus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__LeaveBal__3214EC07EF9DA1B8");

                    b.HasIndex("EffectiveDate");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ExpiryDate");

                    b.HasIndex("LeaveId");

                    b.ToTable("LeaveBalance", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveEarningPolicy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("DurationOrEarningRatio")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<long?>("EligibleGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Expiry")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("LeaveId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MaxDurationPerEarning")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<bool>("RoundOffDecimal")
                        .HasColumnType("bit");

                    b.Property<string>("VaryBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__LeaveEar__3214EC07F586DF74");

                    b.HasIndex("EligibleGroupId");

                    b.HasIndex("LeaveId");

                    b.ToTable("LeaveEarningPolicy", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveTaken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ApprovalGroupId")
                        .HasColumnType("bigint");

                    b.Property<int>("ApprovalStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("DurationEachDay")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int>("EndDate")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossDuration")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<long>("LeaveId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("NetDuration")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StartDate")
                        .HasColumnType("int");

                    b.Property<int?>("WhichSlot")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__LeaveTak__3214EC07542798D6");

                    b.HasIndex("ApprovalGroupId");

                    b.HasIndex("ApprovalStatusId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EndDate");

                    b.HasIndex("LeaveId");

                    b.HasIndex("StartDate");

                    b.ToTable("LeaveTaken", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveTakenPolicy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("EligibleGroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ExcludeDayOff")
                        .HasColumnType("bit");

                    b.Property<bool>("ExcludeHoliday")
                        .HasColumnType("bit");

                    b.Property<long>("LeaveId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MaxDuration")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<int>("MaxTimesInLeaveYear")
                        .HasColumnType("int");

                    b.Property<int>("MaxTimesInServicePeriod")
                        .HasColumnType("int");

                    b.Property<int>("MinDaysBetween")
                        .HasColumnType("int");

                    b.Property<decimal>("MinDuration")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id")
                        .HasName("PK__LeaveTak__3214EC0776E97E33");

                    b.HasIndex("EligibleGroupId");

                    b.HasIndex("LeaveId");

                    b.ToTable("LeaveTakenPolicy", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveYearClosingPolicy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("EligibleGroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("LeaveId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MaxCarryForwardable")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal>("MaxEncashable")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id")
                        .HasName("PK__LeaveYea__3214EC0754B1BF23");

                    b.HasIndex("EligibleGroupId");

                    b.HasIndex("LeaveId");

                    b.ToTable("LeaveYearClosingPolicy", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ManualLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ApprovalStatusId")
                        .HasColumnType("int");

                    b.Property<long?>("ApproverGroupId")
                        .HasColumnType("bigint");

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("InOutMode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("InOutOrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<TimeSpan>("Timestamp")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.HasKey("Id")
                        .HasName("PK__ManualLo__3214EC0778657383");

                    b.HasIndex("ApprovalStatusId");

                    b.HasIndex("ApproverGroupId");

                    b.HasIndex("CalendarId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InOutOrganizationId");

                    b.ToTable("ManualLog", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.MonthlyRoutine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Nth")
                        .HasColumnType("int");

                    b.Property<long>("RoutineId")
                        .HasColumnType("bigint");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("Specificity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__MonthlyR__3214EC0777585363");

                    b.HasIndex("RoutineId");

                    b.HasIndex("ShiftId");

                    b.ToTable("MonthlyRoutine", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<byte[]>("Ip4address")
                        .HasMaxLength(4)
                        .HasColumnType("binary(4)")
                        .HasColumnName("IP4Address")
                        .IsFixedLength();

                    b.Property<byte[]>("Ip6address")
                        .HasMaxLength(16)
                        .HasColumnType("binary(16)")
                        .HasColumnName("IP6Address")
                        .IsFixedLength();

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Organiza__3214EC075E45C8BE");

                    b.HasIndex("ParentId");

                    b.HasIndex(new[] { "Name" }, "UQ__Organiza__737584F63E349EE0")
                        .IsUnique();

                    b.ToTable("Organization", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OrganizationGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Organiza__3214EC0763FC1A66");

                    b.HasIndex("GroupId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationGroup", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OrganizationTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__Organiza__3214EC079C35E391");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationTag", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OvertimeLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AfterShift")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal>("BeforeShift")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("MaxHour")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal>("MaxHourPerDay")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal>("MaxHourPerMonth")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal>("MaxHourPerWeek")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal>("MinHour")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Overtime__3214EC075A102769");

                    b.HasIndex(new[] { "Name" }, "UQ__Overtime__737584F6AF07DDF1")
                        .IsUnique();

                    b.HasIndex(new[] { "Code" }, "UQ__Overtime__A25C5AA75D2933A3")
                        .IsUnique();

                    b.ToTable("OvertimeLimit", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OvertimeLimitOverride", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int>("OverTimeLimitId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Overtime__3214EC074AA7F19C");

                    b.HasIndex("CalendarId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OverTimeLimitId");

                    b.ToTable("OvertimeLimitOverride", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OvertimeLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("AcrossMidnight")
                        .HasColumnType("bit");

                    b.Property<bool>("AutomaticShift")
                        .HasColumnType("bit");

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("OvertimeIn")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan?>("OvertimeOut")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Overtime__3214EC07047ED427");

                    b.HasIndex("CalendarId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShiftId");

                    b.ToTable("OvertimeLog", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PermissionGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Permissi__3214EC077185B6A0");

                    b.HasIndex("PermissionGroupId");

                    b.ToTable("Permission", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.PermissionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Permissi__3214EC074E260E71");

                    b.HasIndex(new[] { "Name" }, "UQ__Permissi__737584F644BDC172")
                        .IsUnique();

                    b.ToTable("PermissionGroup", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Position__3214EC071AE0D7B8");

                    b.HasIndex(new[] { "Name" }, "UQ__Position__737584F65F60F58C")
                        .IsUnique();

                    b.ToTable("Position", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.PositionTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Position__3214EC0742F9D1B3");

                    b.HasIndex("PositionId");

                    b.ToTable("PositionTag", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("RoleId1");

                    b.ToTable("RolePermission", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Routine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Routine__3214EC0721871BE4");

                    b.ToTable("Routine", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Schedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("EndDate")
                        .HasColumnType("int");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("RepeatYearly")
                        .HasColumnType("bit");

                    b.Property<long>("RoutineId")
                        .HasColumnType("bigint");

                    b.Property<int>("StartDate")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Schedule__3214EC077546E7AA");

                    b.HasIndex("EndDate");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoutineId");

                    b.HasIndex("StartDate");

                    b.ToTable("Schedule", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ScheduleOverride", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Schedule__3214EC07CCF13374");

                    b.HasIndex("CalendarId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ShiftId");

                    b.ToTable("ScheduleOverride", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__Setting__3214EC0741BB4BA1");

                    b.HasIndex(new[] { "Name" }, "UQ__Setting__737584F603EB23B5")
                        .IsUnique();

                    b.ToTable("Setting", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcrossMidnight")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<TimeSpan?>("Duration")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan?>("EndTime")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<TimeSpan?>("StartTime")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('fixed')");

                    b.HasKey("Id")
                        .HasName("PK__Shift__3214EC07D0B638DC");

                    b.HasIndex(new[] { "Name" }, "UQ__Shift__737584F6D83E515A")
                        .IsUnique();

                    b.HasIndex(new[] { "Code" }, "UQ__Shift__A25C5AA729B8D13D")
                        .IsUnique();

                    b.ToTable("Shift", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ShiftBreak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcrossMidnight")
                        .HasColumnType("bit");

                    b.Property<int>("BreakId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasPrecision(0)
                        .HasColumnType("time(0)");

                    b.HasKey("Id")
                        .HasName("PK__ShiftBre__3214EC07135ACEF5");

                    b.HasIndex("BreakId");

                    b.HasIndex("ShiftId");

                    b.ToTable("ShiftBreak", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.TmpEmployee", b =>
                {
                    b.Property<double?>("CheckInGraceMinute")
                        .HasColumnType("float");

                    b.Property<double?>("CheckInStartMinute")
                        .HasColumnType("float");

                    b.Property<double?>("CheckOutEndMinute")
                        .HasColumnType("float");

                    b.Property<double?>("CheckOutGraceMinute")
                        .HasColumnType("float");

                    b.Property<double?>("DeviceEnrollNumber")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("EmailVerified")
                        .HasColumnType("float");

                    b.Property<double?>("Id")
                        .HasColumnType("float");

                    b.Property<double?>("LastOrganizationId")
                        .HasColumnType("float");

                    b.Property<double?>("LastPositionId")
                        .HasColumnType("float");

                    b.Property<double?>("LastPromotionOrJoinedDate")
                        .HasColumnType("float");

                    b.Property<double?>("LastTransferOrJoinedDate")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OfficialNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("OverTimeLimit")
                        .HasColumnType("float");

                    b.Property<string>("PayrollNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("PhoneNumberVerified")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("tmp_Employee", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.TmpOrganization", b =>
                {
                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint");

                    b.Property<string>("BranchName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("UnderBranch")
                        .HasColumnType("bigint");

                    b.ToTable("tmp_Organization", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.TrackerAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("TrackerId")
                        .HasColumnType("int");

                    b.Property<int>("TrackingEndDate")
                        .HasColumnType("int");

                    b.Property<int>("TrackingStartDate")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TrackerA__3214EC07566ABFD2");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TrackerId");

                    b.HasIndex("TrackingEndDate");

                    b.HasIndex("TrackingStartDate");

                    b.ToTable("TrackerAssignment", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.UserAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("IdentityRoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("IdentityRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAccess", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", "dbo");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ApprovalHistory", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("ApprovalHistories")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__ApprovalH__Calen__489AC854");

                    b.HasOne("Ghadiful.DataAccess.Entities.ApprovalStatus", "Status")
                        .WithMany("ApprovalHistories")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__ApprovalH__Statu__4A8310C6");

                    b.HasOne("Ghadiful.DataAccess.User", "User")
                        .WithMany("ApprovalHistories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__ApprovalH__UserI__498EEC8D");

                    b.Navigation("Calendar");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ApprovalStatus", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.ApprovalStatus", "BackFlow")
                        .WithMany("InverseBackFlow")
                        .HasForeignKey("BackFlowId")
                        .HasConstraintName("FK__ApprovalS__BackF__4C6B5938");

                    b.HasOne("Ghadiful.DataAccess.Entities.ApprovalStatus", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__ApprovalS__Paren__4B7734FF");

                    b.Navigation("BackFlow");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Approver", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Group", "Group")
                        .WithMany("Approvers")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__Approver__GroupI__4E53A1AA");

                    b.HasOne("Ghadiful.DataAccess.Entities.ApprovalStatus", "Status")
                        .WithMany("Approvers")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Approver__Status__4D5F7D71");

                    b.Navigation("Group");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.AttendanceLogToday", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.BiometricTracker", "BioTracker")
                        .WithMany()
                        .HasForeignKey("BioTrackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BioTracker");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.BiometricLog", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("BiometricLogs")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__Biometric__Calen__4F47C5E3");

                    b.HasOne("Ghadiful.DataAccess.Entities.BiometricTracker", "Tracker")
                        .WithMany("BiometricLogs")
                        .HasForeignKey("TrackerId")
                        .IsRequired()
                        .HasConstraintName("FK__Biometric__Track__503BEA1C");

                    b.Navigation("Calendar");

                    b.Navigation("Tracker");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.BreakLog", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("BreakLogs")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__BreakLog__Calend__51300E55");

                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("BreakLogs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__BreakLog__Employ__5224328E");

                    b.HasOne("Ghadiful.DataAccess.Entities.Shift", "Shift")
                        .WithMany("BreakLogs")
                        .HasForeignKey("ShiftId")
                        .IsRequired()
                        .HasConstraintName("FK__BreakLog__ShiftI__531856C7");

                    b.Navigation("Calendar");

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Calendar", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.CalendarMonth", "Month")
                        .WithMany("Calendars")
                        .HasForeignKey("MonthId")
                        .IsRequired()
                        .HasConstraintName("FK__Calendar__MonthI__540C7B00");

                    b.Navigation("Month");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.CalendarMonth", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.CalendarYear", "Year")
                        .WithMany("CalendarMonths")
                        .HasForeignKey("YearId")
                        .IsRequired()
                        .HasConstraintName("FK__CalendarM__YearI__55009F39");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.CheckInOutLog", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("CheckInOutLogs")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckInOu__Calen__55F4C372");

                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "CinOrganization")
                        .WithMany("CheckInOutLogCinOrganizations")
                        .HasForeignKey("CinOrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckInOu__CInOr__59C55456");

                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "CoutOrganization")
                        .WithMany("CheckInOutLogCoutOrganizations")
                        .HasForeignKey("CoutOrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckInOu__COutO__5AB9788F");

                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "EmpOrganization")
                        .WithMany("CheckInOutLogEmpOrganizations")
                        .HasForeignKey("EmpOrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckInOu__EmpOr__58D1301D");

                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("CheckInOutLogs")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckInOu__Emplo__56E8E7AB");

                    b.HasOne("Ghadiful.DataAccess.Entities.Shift", "Shift")
                        .WithMany("CheckInOutLogs")
                        .HasForeignKey("ShiftId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckInOu__Shift__57DD0BE4");

                    b.Navigation("Calendar");

                    b.Navigation("CinOrganization");

                    b.Navigation("CoutOrganization");

                    b.Navigation("EmpOrganization");

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.CheckInOutRangeOverride", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("CheckInOutRangeOverrides")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckInOu__Calen__5CA1C101");

                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("CheckInOutRangeOverrides")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__CheckInOu__Emplo__5BAD9CC8");

                    b.Navigation("Calendar");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Employee", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "LastOrganization")
                        .WithMany("Employees")
                        .HasForeignKey("LastOrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__LastOr__607251E5");

                    b.HasOne("Ghadiful.DataAccess.Entities.Position", "LastPosition")
                        .WithMany("Employees")
                        .HasForeignKey("LastPositionId")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__LastPo__5D95E53A");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "LastPromotionOrJoinedDateNavigation")
                        .WithMany("EmployeeLastPromotionOrJoinedDateNavigations")
                        .HasForeignKey("LastPromotionOrJoinedDate")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__LastPr__5F7E2DAC");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "LastTransferOrJoinedDateNavigation")
                        .WithMany("EmployeeLastTransferOrJoinedDateNavigations")
                        .HasForeignKey("LastTransferOrJoinedDate")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__LastTr__5E8A0973");

                    b.HasOne("Ghadiful.DataAccess.Entities.OvertimeLimit", "OverTimeLimitNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("OverTimeLimit")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__OverTi__6166761E");

                    b.Navigation("LastOrganization");

                    b.Navigation("LastPosition");

                    b.Navigation("LastPromotionOrJoinedDateNavigation");

                    b.Navigation("LastTransferOrJoinedDateNavigation");

                    b.Navigation("OverTimeLimitNavigation");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.EmployeeGroup", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("EmployeeGroups")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeG__Emplo__634EBE90");

                    b.HasOne("Ghadiful.DataAccess.Entities.Group", "Group")
                        .WithMany("EmployeeGroups")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeG__Group__625A9A57");

                    b.Navigation("Employee");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.EmployeePosition", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("EmployeePositions")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeP__Emplo__6442E2C9");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "EndDateNavigation")
                        .WithMany("EmployeePositionEndDateNavigations")
                        .HasForeignKey("EndDate")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeP__EndDa__671F4F74");

                    b.HasOne("Ghadiful.DataAccess.Entities.Position", "Position")
                        .WithMany("EmployeePositions")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK__EmployeeP__Posit__65370702");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "StartDateNavigation")
                        .WithMany("EmployeePositionStartDateNavigations")
                        .HasForeignKey("StartDate")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeP__Start__662B2B3B");

                    b.Navigation("Employee");

                    b.Navigation("EndDateNavigation");

                    b.Navigation("Position");

                    b.Navigation("StartDateNavigation");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.EmployeeTag", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("EmployeeTags")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeT__Emplo__681373AD");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.EmployeeTransfer", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("EmployeeTransfers")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeT__Emplo__690797E6");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "EndDateNavigation")
                        .WithMany("EmployeeTransferEndDateNavigations")
                        .HasForeignKey("EndDate")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeT__EndDa__6BE40491");

                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "Organization")
                        .WithMany("EmployeeTransfers")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK__EmployeeT__Organ__69FBBC1F");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "StartDateNavigation")
                        .WithMany("EmployeeTransferStartDateNavigations")
                        .HasForeignKey("StartDate")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeT__Start__6AEFE058");

                    b.Navigation("Employee");

                    b.Navigation("EndDateNavigation");

                    b.Navigation("Organization");

                    b.Navigation("StartDateNavigation");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.GraceTimeOverride", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("GraceTimeOverrides")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__GraceTime__Calen__6DCC4D03");

                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("GraceTimeOverrides")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__GraceTime__Emplo__6CD828CA");

                    b.Navigation("Calendar");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.HolidayCalendar", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("HolidayCalendars")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__HolidayCa__Calen__70A8B9AE");

                    b.HasOne("Ghadiful.DataAccess.Entities.Group", "Group")
                        .WithMany("HolidayCalendars")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__HolidayCa__Group__6FB49575");

                    b.HasOne("Ghadiful.DataAccess.Entities.Holiday", "Holiday")
                        .WithMany("HolidayCalendars")
                        .HasForeignKey("HolidayId")
                        .IsRequired()
                        .HasConstraintName("FK__HolidayCa__Holid__6EC0713C");

                    b.Navigation("Calendar");

                    b.Navigation("Group");

                    b.Navigation("Holiday");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveBalance", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "EffectiveDateNavigation")
                        .WithMany("LeaveBalanceEffectiveDateNavigations")
                        .HasForeignKey("EffectiveDate")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveBala__Effec__73852659");

                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("LeaveBalances")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveBala__Emplo__719CDDE7");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "ExpiryDateNavigation")
                        .WithMany("LeaveBalanceExpiryDateNavigations")
                        .HasForeignKey("ExpiryDate")
                        .HasConstraintName("FK__LeaveBala__Expir__74794A92");

                    b.HasOne("Ghadiful.DataAccess.Entities.Leave", "Leave")
                        .WithMany("LeaveBalances")
                        .HasForeignKey("LeaveId")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveBala__Leave__72910220");

                    b.Navigation("EffectiveDateNavigation");

                    b.Navigation("Employee");

                    b.Navigation("ExpiryDateNavigation");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveEarningPolicy", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.EmployeeGroup", "EligibleGroup")
                        .WithMany("LeaveEarningPolicies")
                        .HasForeignKey("EligibleGroupId")
                        .HasConstraintName("FK__LeaveEarn__Eligi__76619304");

                    b.HasOne("Ghadiful.DataAccess.Entities.Leave", "Leave")
                        .WithMany("LeaveEarningPolicies")
                        .HasForeignKey("LeaveId")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveEarn__Leave__756D6ECB");

                    b.Navigation("EligibleGroup");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveTaken", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Group", "ApprovalGroup")
                        .WithMany("LeaveTakens")
                        .HasForeignKey("ApprovalGroupId")
                        .HasConstraintName("FK__LeaveTake__Appro__7C1A6C5A");

                    b.HasOne("Ghadiful.DataAccess.Entities.ApprovalStatus", "ApprovalStatus")
                        .WithMany("LeaveTakens")
                        .HasForeignKey("ApprovalStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveTake__Appro__7B264821");

                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("LeaveTakens")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveTake__Emplo__7849DB76");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "EndDateNavigation")
                        .WithMany("LeaveTakenEndDateNavigations")
                        .HasForeignKey("EndDate")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveTake__EndDa__7A3223E8");

                    b.HasOne("Ghadiful.DataAccess.Entities.Leave", "Leave")
                        .WithMany("LeaveTakens")
                        .HasForeignKey("LeaveId")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveTake__Leave__7755B73D");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "StartDateNavigation")
                        .WithMany("LeaveTakenStartDateNavigations")
                        .HasForeignKey("StartDate")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveTake__Start__793DFFAF");

                    b.Navigation("ApprovalGroup");

                    b.Navigation("ApprovalStatus");

                    b.Navigation("Employee");

                    b.Navigation("EndDateNavigation");

                    b.Navigation("Leave");

                    b.Navigation("StartDateNavigation");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveTakenPolicy", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.EmployeeGroup", "EligibleGroup")
                        .WithMany("LeaveTakenPolicies")
                        .HasForeignKey("EligibleGroupId")
                        .HasConstraintName("FK__LeaveTake__Eligi__7E02B4CC");

                    b.HasOne("Ghadiful.DataAccess.Entities.Leave", "Leave")
                        .WithMany("LeaveTakenPolicies")
                        .HasForeignKey("LeaveId")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveTake__Leave__7D0E9093");

                    b.Navigation("EligibleGroup");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.LeaveYearClosingPolicy", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.EmployeeGroup", "EligibleGroup")
                        .WithMany("LeaveYearClosingPolicies")
                        .HasForeignKey("EligibleGroupId")
                        .HasConstraintName("FK__LeaveYear__Eligi__7FEAFD3E");

                    b.HasOne("Ghadiful.DataAccess.Entities.Leave", "Leave")
                        .WithMany("LeaveYearClosingPolicies")
                        .HasForeignKey("LeaveId")
                        .IsRequired()
                        .HasConstraintName("FK__LeaveYear__Leave__7EF6D905");

                    b.Navigation("EligibleGroup");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ManualLog", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.ApprovalStatus", "ApprovalStatus")
                        .WithMany("ManualLogs")
                        .HasForeignKey("ApprovalStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__ManualLog__Appro__03BB8E22");

                    b.HasOne("Ghadiful.DataAccess.Entities.Group", "ApproverGroup")
                        .WithMany("ManualLogs")
                        .HasForeignKey("ApproverGroupId")
                        .HasConstraintName("FK__ManualLog__Appro__04AFB25B");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("ManualLogs")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__ManualLog__Calen__00DF2177");

                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("ManualLogs")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__ManualLog__Emplo__01D345B0");

                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "InOutOrganization")
                        .WithMany("ManualLogs")
                        .HasForeignKey("InOutOrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK__ManualLog__InOut__02C769E9");

                    b.Navigation("ApprovalStatus");

                    b.Navigation("ApproverGroup");

                    b.Navigation("Calendar");

                    b.Navigation("Employee");

                    b.Navigation("InOutOrganization");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.MonthlyRoutine", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Routine", "Routine")
                        .WithMany("MonthlyRoutines")
                        .HasForeignKey("RoutineId")
                        .IsRequired()
                        .HasConstraintName("FK__MonthlyRo__Routi__05A3D694");

                    b.HasOne("Ghadiful.DataAccess.Entities.Shift", "Shift")
                        .WithMany("MonthlyRoutines")
                        .HasForeignKey("ShiftId")
                        .IsRequired()
                        .HasConstraintName("FK__MonthlyRo__Shift__0697FACD");

                    b.Navigation("Routine");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Organization", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__Organizat__Paren__078C1F06");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OrganizationGroup", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Group", "Group")
                        .WithMany("OrganizationGroups")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__Organizat__Group__0880433F");

                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "Organization")
                        .WithMany("OrganizationGroups")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK__Organizat__Organ__09746778");

                    b.Navigation("Group");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OrganizationTag", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "Organization")
                        .WithMany("OrganizationTags")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK__Organizat__Organ__0A688BB1");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OvertimeLimitOverride", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("OvertimeLimitOverrides")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__OvertimeL__Calen__0C50D423");

                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("OvertimeLimitOverrides")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__OvertimeL__Emplo__0B5CAFEA");

                    b.HasOne("Ghadiful.DataAccess.Entities.OvertimeLimit", "OverTimeLimit")
                        .WithMany("OvertimeLimitOverrides")
                        .HasForeignKey("OverTimeLimitId")
                        .IsRequired()
                        .HasConstraintName("FK__OvertimeL__OverT__0D44F85C");

                    b.Navigation("Calendar");

                    b.Navigation("Employee");

                    b.Navigation("OverTimeLimit");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OvertimeLog", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("OvertimeLogs")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__OvertimeL__Calen__0E391C95");

                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("OvertimeLogs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__OvertimeL__Emplo__0F2D40CE");

                    b.HasOne("Ghadiful.DataAccess.Entities.Shift", "Shift")
                        .WithMany("OvertimeLogs")
                        .HasForeignKey("ShiftId")
                        .IsRequired()
                        .HasConstraintName("FK__OvertimeL__Shift__10216507");

                    b.Navigation("Calendar");

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Permission", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.PermissionGroup", "PermissionGroup")
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionGroupId")
                        .IsRequired()
                        .HasConstraintName("FK__Permissio__Permi__11158940");

                    b.Navigation("PermissionGroup");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.PositionTag", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Position", "Position")
                        .WithMany("PositionTags")
                        .HasForeignKey("PositionId")
                        .IsRequired()
                        .HasConstraintName("FK__PositionT__Posit__1209AD79");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.RolePermission", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ghadiful.DataAccess.Role", null)
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ghadiful.DataAccess.Entities.IdentityRole", "Role")
                        .WithMany("RolePermission")
                        .HasForeignKey("RoleId1");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Schedule", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "EndDateNavigation")
                        .WithMany("ScheduleEndDateNavigations")
                        .HasForeignKey("EndDate")
                        .HasConstraintName("FK__Schedule__EndDat__17C286CF");

                    b.HasOne("Ghadiful.DataAccess.Entities.Group", "Group")
                        .WithMany("Schedules")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__Schedule__GroupI__15DA3E5D");

                    b.HasOne("Ghadiful.DataAccess.Entities.Routine", "Routine")
                        .WithMany("Schedules")
                        .HasForeignKey("RoutineId")
                        .IsRequired()
                        .HasConstraintName("FK__Schedule__Routin__14E61A24");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "StartDateNavigation")
                        .WithMany("ScheduleStartDateNavigations")
                        .HasForeignKey("StartDate")
                        .IsRequired()
                        .HasConstraintName("FK__Schedule__StartD__16CE6296");

                    b.Navigation("EndDateNavigation");

                    b.Navigation("Group");

                    b.Navigation("Routine");

                    b.Navigation("StartDateNavigation");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ScheduleOverride", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "Calendar")
                        .WithMany("ScheduleOverrides")
                        .HasForeignKey("CalendarId")
                        .IsRequired()
                        .HasConstraintName("FK__ScheduleO__Calen__19AACF41");

                    b.HasOne("Ghadiful.DataAccess.Entities.Group", "Group")
                        .WithMany("ScheduleOverrides")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__ScheduleO__Group__18B6AB08");

                    b.HasOne("Ghadiful.DataAccess.Entities.Shift", "Shift")
                        .WithMany("ScheduleOverrides")
                        .HasForeignKey("ShiftId")
                        .IsRequired()
                        .HasConstraintName("FK__ScheduleO__Shift__1A9EF37A");

                    b.Navigation("Calendar");

                    b.Navigation("Group");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ShiftBreak", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Break", "Break")
                        .WithMany("ShiftBreaks")
                        .HasForeignKey("BreakId")
                        .IsRequired()
                        .HasConstraintName("FK__ShiftBrea__Break__1C873BEC");

                    b.HasOne("Ghadiful.DataAccess.Entities.Shift", "Shift")
                        .WithMany("ShiftBreaks")
                        .HasForeignKey("ShiftId")
                        .IsRequired()
                        .HasConstraintName("FK__ShiftBrea__Shift__1B9317B3");

                    b.Navigation("Break");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.TrackerAssignment", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Organization", "Organization")
                        .WithMany("TrackerAssignments")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK__TrackerAs__Organ__1E6F845E");

                    b.HasOne("Ghadiful.DataAccess.Entities.BiometricTracker", "Tracker")
                        .WithMany("TrackerAssignments")
                        .HasForeignKey("TrackerId")
                        .IsRequired()
                        .HasConstraintName("FK__TrackerAs__Track__1D7B6025");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "TrackingEndDateNavigation")
                        .WithMany("TrackerAssignmentTrackingEndDateNavigations")
                        .HasForeignKey("TrackingEndDate")
                        .IsRequired()
                        .HasConstraintName("FK__TrackerAs__Track__2057CCD0");

                    b.HasOne("Ghadiful.DataAccess.Entities.Calendar", "TrackingStartDateNavigation")
                        .WithMany("TrackerAssignmentTrackingStartDateNavigations")
                        .HasForeignKey("TrackingStartDate")
                        .IsRequired()
                        .HasConstraintName("FK__TrackerAs__Track__1F63A897");

                    b.Navigation("Organization");

                    b.Navigation("Tracker");

                    b.Navigation("TrackingEndDateNavigation");

                    b.Navigation("TrackingStartDateNavigation");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.UserAccess", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Group", "Group")
                        .WithMany("UserAccesses")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ghadiful.DataAccess.Entities.IdentityRole", null)
                        .WithMany("UserAccesses")
                        .HasForeignKey("IdentityRoleId");

                    b.HasOne("Ghadiful.DataAccess.Role", "Role")
                        .WithMany("UserAccesses")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ghadiful.DataAccess.User", "User")
                        .WithMany("UserAccesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.User", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.Employee", "Employee")
                        .WithMany("Users")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ghadiful.DataAccess.Entities.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Ghadiful.DataAccess.Entities.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.ApprovalStatus", b =>
                {
                    b.Navigation("ApprovalHistories");

                    b.Navigation("Approvers");

                    b.Navigation("InverseBackFlow");

                    b.Navigation("InverseParent");

                    b.Navigation("LeaveTakens");

                    b.Navigation("ManualLogs");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.BiometricTracker", b =>
                {
                    b.Navigation("BiometricLogs");

                    b.Navigation("TrackerAssignments");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Break", b =>
                {
                    b.Navigation("ShiftBreaks");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Calendar", b =>
                {
                    b.Navigation("ApprovalHistories");

                    b.Navigation("BiometricLogs");

                    b.Navigation("BreakLogs");

                    b.Navigation("CheckInOutLogs");

                    b.Navigation("CheckInOutRangeOverrides");

                    b.Navigation("EmployeeLastPromotionOrJoinedDateNavigations");

                    b.Navigation("EmployeeLastTransferOrJoinedDateNavigations");

                    b.Navigation("EmployeePositionEndDateNavigations");

                    b.Navigation("EmployeePositionStartDateNavigations");

                    b.Navigation("EmployeeTransferEndDateNavigations");

                    b.Navigation("EmployeeTransferStartDateNavigations");

                    b.Navigation("GraceTimeOverrides");

                    b.Navigation("HolidayCalendars");

                    b.Navigation("LeaveBalanceEffectiveDateNavigations");

                    b.Navigation("LeaveBalanceExpiryDateNavigations");

                    b.Navigation("LeaveTakenEndDateNavigations");

                    b.Navigation("LeaveTakenStartDateNavigations");

                    b.Navigation("ManualLogs");

                    b.Navigation("OvertimeLimitOverrides");

                    b.Navigation("OvertimeLogs");

                    b.Navigation("ScheduleEndDateNavigations");

                    b.Navigation("ScheduleOverrides");

                    b.Navigation("ScheduleStartDateNavigations");

                    b.Navigation("TrackerAssignmentTrackingEndDateNavigations");

                    b.Navigation("TrackerAssignmentTrackingStartDateNavigations");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.CalendarMonth", b =>
                {
                    b.Navigation("Calendars");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.CalendarYear", b =>
                {
                    b.Navigation("CalendarMonths");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Employee", b =>
                {
                    b.Navigation("BreakLogs");

                    b.Navigation("CheckInOutLogs");

                    b.Navigation("CheckInOutRangeOverrides");

                    b.Navigation("EmployeeGroups");

                    b.Navigation("EmployeePositions");

                    b.Navigation("EmployeeTags");

                    b.Navigation("EmployeeTransfers");

                    b.Navigation("GraceTimeOverrides");

                    b.Navigation("LeaveBalances");

                    b.Navigation("LeaveTakens");

                    b.Navigation("ManualLogs");

                    b.Navigation("OvertimeLimitOverrides");

                    b.Navigation("OvertimeLogs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.EmployeeGroup", b =>
                {
                    b.Navigation("LeaveEarningPolicies");

                    b.Navigation("LeaveTakenPolicies");

                    b.Navigation("LeaveYearClosingPolicies");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Group", b =>
                {
                    b.Navigation("Approvers");

                    b.Navigation("EmployeeGroups");

                    b.Navigation("HolidayCalendars");

                    b.Navigation("LeaveTakens");

                    b.Navigation("ManualLogs");

                    b.Navigation("OrganizationGroups");

                    b.Navigation("ScheduleOverrides");

                    b.Navigation("Schedules");

                    b.Navigation("UserAccesses");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Holiday", b =>
                {
                    b.Navigation("HolidayCalendars");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.IdentityRole", b =>
                {
                    b.Navigation("RolePermission");

                    b.Navigation("UserAccesses");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Leave", b =>
                {
                    b.Navigation("LeaveBalances");

                    b.Navigation("LeaveEarningPolicies");

                    b.Navigation("LeaveTakenPolicies");

                    b.Navigation("LeaveTakens");

                    b.Navigation("LeaveYearClosingPolicies");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Organization", b =>
                {
                    b.Navigation("CheckInOutLogCinOrganizations");

                    b.Navigation("CheckInOutLogCoutOrganizations");

                    b.Navigation("CheckInOutLogEmpOrganizations");

                    b.Navigation("EmployeeTransfers");

                    b.Navigation("Employees");

                    b.Navigation("InverseParent");

                    b.Navigation("ManualLogs");

                    b.Navigation("OrganizationGroups");

                    b.Navigation("OrganizationTags");

                    b.Navigation("TrackerAssignments");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.OvertimeLimit", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("OvertimeLimitOverrides");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.PermissionGroup", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Position", b =>
                {
                    b.Navigation("EmployeePositions");

                    b.Navigation("Employees");

                    b.Navigation("PositionTags");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Routine", b =>
                {
                    b.Navigation("MonthlyRoutines");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Entities.Shift", b =>
                {
                    b.Navigation("BreakLogs");

                    b.Navigation("CheckInOutLogs");

                    b.Navigation("MonthlyRoutines");

                    b.Navigation("OvertimeLogs");

                    b.Navigation("ScheduleOverrides");

                    b.Navigation("ShiftBreaks");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserAccesses");
                });

            modelBuilder.Entity("Ghadiful.DataAccess.User", b =>
                {
                    b.Navigation("ApprovalHistories");

                    b.Navigation("UserAccesses");
                });
#pragma warning restore 612, 618
        }
    }
}
